-- relational database(관계형데이터베이스)
-- RDBMS(관계형 데이터베이스 관리 시스템/소프트웨어)
-- PostgreSQL

-- 물리적인 개념(디스크공간)
-- table space 

-- 논리적인 개념(데이터구조)
-- database > schema > table
-- 중소규모: 사용자(시스템) > 애플리케이션(서비스) > 기능(객체구조)
-- 대규모: 서비스 > 기능 > 세부기능
-- naver > blog > post, comment,....
-- naver > news > article, comment, like...
-- postgres > myworkspace > photo, contact
--            commerce > purchase_order, purchase_order_product,
--            sales > sales_order, product
--            analysis > 
-- 실제 데이터는 table에 저장됨 -> table space 공간에 물리적인 파일로 저장



-- 스키마 생성
create schema myworkspace;

-- 현재 쿼리창에서 사용할 스키마 선택
set schema 'myworkspace';



-- 테이블(table): 실질적인 데이터 저장 공간
-- 행(row, record)/열(column, field) 구조로 되어있음
-- 1개의 행이 1건의 데이터
-- 1개의 열이 속성(attr, prop, field) 한 개

-- 테이블 생성
/* create table 테이블 (
 * 	컬럼명 컬럼타입 옵션,
 * 	컬럼명 컬럼타입 옵션,
 *  컬럼명 컬럼타입 옵션,
 * )
 */
-- pk(primary key): 주키
-- 유일성과 최소성을 보장하는 컬럼
-- 유일성: 전체 테이블 데이터에서 유일한 값을 가짐(사용자id, 이메일, 주민등록번호)
--        -> (이름, 핸드폰번호) 유일값
-- 최소성: 최소의 컬럼 개수와 크기로 구성되어있음
-- PK값만 알면 데이터 1건을 찾을 수 있음
create table photo (
	-- 컬럼명 컬럼타입 [그외 옵션]
	-- generated by default as identity: 자동증가되는 값(1,2,3,4....)
	id int8 generated by default as identity, 
	created_time int8 not null, 
	-- description varchar(255) (가변길이 문자열 255바이트)
	description varchar(255), 
	file_name varchar(255), 
	file_type varchar(255), 
	photo_url TEXT, 
	title varchar(255), 
	primary key (id)
);



-- 데이터를 1건 추가
-- insert into 테이블(컬럼1, 컬럼2...) values(값1, 값2)..
insert into photo(created_time, title)
values(1, 'test');



-- 테이블 데이터를 전체 조회
-- select 컬럼목록 from 테이블명;
select * from photo; -- 전체 컬럼 선택
select id, title from photo; -- 특정 컬럼 선택



-- 특정 데이터 조회
-- select 컬럼목록 from 테이블명 where 조건식
-- equal 조건식: 컬럼명 = 값
select * from photo where id = 1; -- map.get(1)
select * from photo where id >= 1;


